# docker-compose up

version: '2'
services:
  postgres:
    environment:
      - POSTGRES_DB=goby_test
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
      - PGDATA=/data/postgres
    image: 'postgres:9.6.23-alpine'
    mem_limit: 120m
    cpu_shares: 128
    ports:
      - 5432:5432
    healthcheck:
      test: "pg_isready --username=postgres && psql --username=postgres --list"
      timeout: 10s
      retries: 20
  influxdb:
    image: influxdb:1.8-alpine
    platform: linux/x86_64
    ports:
    - 8086:8086
    environment:
     - INFLUXDB_DB=influx
     - INFLUXDB_ADMIN_USER=admin
     - INFLUXDB_ADMIN_PASSWORD=admin
    volumes:
    - ./influxdb/scripts:/docker-entrypoint-initdb.d
    # - influxdb_data:/var/lib/influxdb 
  telegraf:
    image: telegraf:1.19.2-alpine
    container_name: telegraf
    platform: linux/x86_64
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
    - '8125:8125/udp'
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  grafana:
    image: grafana/grafana:8.1.1
    platform: linux/x86_64
    ports:
      - 3001:3000
    links:
      - influxdb
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    depends_on:
      - influxdb
    volumes:
    # - grafana_data:/var/lib/grafana
    - ./grafana/provisioning/:/etc/grafana/provisioning/
    - ./grafana/dashboards/:/var/lib/grafana/dashboards/
  web:
    environment:
      - POSTGRES_HOST=postgres
    image: gobylang/todo-sample:latest
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy  
    ports:
      - 3000:3000
      - "52022:22"
    mem_limit: 120m
    cpu_shares: 1024
    entrypoint: goby server.gb --bind 0.0.0.0:3000 wsgi
  tank:
    image: direvius/yandex-tank
#    image: ovil/ltws-tank
#    environment:
#      - COMPOSE_CONVERT_WINDOWS_PATHS=1
    volumes:
      - ../:/data
    cap_add: [NET_ADMIN]
    depends_on:
      - web
      - grafana
    entrypoint: tail -f /dev/null
  k6:
    image: loadimpact/k6:0.33.0
    ports:
      - 6565:6565
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
#      - COMPOSE_CONVERT_WINDOWS_PATHS=1
    volumes:
      - ../:/data
    cap_add: [NET_ADMIN]
    privileged: true
    depends_on:
      - web
      - influxdb
      - grafana
    entrypoint: tail -f /dev/null

volumes:
  grafana_data: {}
  influxdb_data: {}
